apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-deployment
spec:
  replicas: 3  # You can adjust the number of replicas as needed.
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: to-do-app
  template:
    metadata:
      labels:
        app: to-do-app
    spec:
      containers:
      - name: flask-container
        image: sheenagarg9/to-do-app:latest
        ports:
        - containerPort: 5000  # Adjust the port as per your Flask app's configuration.
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - "echo: this is a failure!!"
                #httpGet:
                #path: /healthz
                #port: 8080
          initialDelaySeconds: 10
          periodSeconds: 20

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
spec:
  replicas: 3  # You can adjust the number of replicas as needed.
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb-container
        image: mongo:latest
        ports:
        - containerPort: 28017  # Adjust the port as per your Flask app's configuration.
        readinessProbe:
          httpGet: 
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 20